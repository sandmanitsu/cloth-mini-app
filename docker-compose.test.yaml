services:
  app:
    build:
      context: .
      dockerfile: dockerfile
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
  test:
    build:
      context: .
      dockerfile: dockerfile.test
    depends_on:
    - app
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: storage
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    command: >
      postgres -c max_connections=1000
              -c shared_buffers=256MB
              -c effective_cache_size=768MB
              -c maintenance_work_mem=64MB
              -c checkpoint_completion_target=0.7
              -c wal_buffers=16MB
              -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d storage" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  # pgdata:
  #   driver: local
  minio-storage: